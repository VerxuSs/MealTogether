// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("MY_DATABASE_URL")
}

enum EventStatus {
  OPENED
  CLOSED
  CANCELED
}

model Event {
  id Int @id @default(autoincrement())

  name String @unique

  slots Int @default(1)

  status EventStatus @default(OPENED)
  // startDate        DateTime
  // endDate          DateTime

  authorId Int
  author   User @relation(fields: [authorId], references: [id])

  menus        Menu[]
  participants Participant[]
}

model User {
  id Int @id @default(autoincrement())

  email String @unique

  firstname String
  lastname  String

  password String

  diets          Diet[]
  participations Participant[]

  events Event[]
}

model Participant {
  userId  Int
  eventId Int

  menuId Int?

  user  User  @relation(fields: [userId], references: [id])
  menu  Menu? @relation(fields: [menuId], references: [id])
  event Event @relation(fields: [eventId], references: [id], onDelete: Cascade)

  @@id([eventId, userId])
}

model Menu {
  id Int @id @default(autoincrement())

  name String

  eventId Int

  description String?

  dishes Dish[]

  participants Participant[]

  diets Diet[]

  event Event @relation(fields: [eventId], references: [id], onDelete: Cascade)
}

model Dish {
  id Int @id @default(autoincrement())

  name String

  menuId Int

  description String?

  ingredients IngredientInDish[]

  menu Menu @relation(fields: [menuId], references: [id])
}

model Ingredient {
  id Int @id @default(autoincrement())

  name String @unique

  description String?

  measurementUnitId Int

  ingredients IngredientInDish[]

  measurementUnit MeasurementUnit @relation(fields: [measurementUnitId], references: [id])
}

model Diet {
  id Int @id @default(autoincrement())

  name String @unique

  User User[]

  menus Menu[]
}

model MeasurementUnit {
  id Int @id @default(autoincrement())

  name String @unique

  ingredients Ingredient[]
}

model IngredientInDish {
  dishId       Int
  ingredientId Int

  unitPrice Float @default(0)
  quantity  Float @default(1)

  dish       Dish       @relation(fields: [dishId], references: [id])
  ingredient Ingredient @relation(fields: [ingredientId], references: [id])

  @@id([ingredientId, dishId])
}
